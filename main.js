(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,":root {\n    --white: white;\n    --yellow: #FFC60B;\n    --green: #85AE85;\n    --light-blue: #0A95FF;\n    --dark-blue: #230AFF;\n    --purple: #7766FF;\n    --lilac: #AAA0FF;\n    --dark-orange: #df880a;\n    --chocolate: #c16a08;\n    --khaki: #ffde73;\n}\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    background: var(--light-blue);\n    width: 100%;\n}\n.nav {\n    width: 100%;\n    height: 20%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    column-gap: 30px;\n    background: var(--white);\n}\n.nav .topbar {\n    padding: 30px;\n    font-size: x-large;\n    opacity: 0.7;\n}\n.nav .topbar:hover {\n    cursor: pointer;\n    background: rgb(0,0,0,0.04);\n}\n.content {\n    margin-top: 20px;\n    width: 80%;\n    height: auto;\n    border-radius: 10px;\n    font-family: Arial, Helvetica, sans-serif;\n    background: var(--white);\n}\n.content .box {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,cAAc;IACd,iBAAiB;IACjB,gBAAgB;IAChB,qBAAqB;IACrB,oBAAoB;IACpB,iBAAiB;IACjB,gBAAgB;IAChB,sBAAsB;IACtB,oBAAoB;IACpB,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,6BAA6B;IAC7B,WAAW;AACf;AACA;IACI,WAAW;IACX,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;IAChB,wBAAwB;AAC5B;AACA;IACI,aAAa;IACb,kBAAkB;IAClB,YAAY;AAChB;AACA;IACI,eAAe;IACf,2BAA2B;AAC/B;AACA;IACI,gBAAgB;IAChB,UAAU;IACV,YAAY;IACZ,mBAAmB;IACnB,yCAAyC;IACzC,wBAAwB;AAC5B;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B",sourcesContent:[":root {\n    --white: white;\n    --yellow: #FFC60B;\n    --green: #85AE85;\n    --light-blue: #0A95FF;\n    --dark-blue: #230AFF;\n    --purple: #7766FF;\n    --lilac: #AAA0FF;\n    --dark-orange: #df880a;\n    --chocolate: #c16a08;\n    --khaki: #ffde73;\n}\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    background: var(--light-blue);\n    width: 100%;\n}\n.nav {\n    width: 100%;\n    height: 20%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    column-gap: 30px;\n    background: var(--white);\n}\n.nav .topbar {\n    padding: 30px;\n    font-size: x-large;\n    opacity: 0.7;\n}\n.nav .topbar:hover {\n    cursor: pointer;\n    background: rgb(0,0,0,0.04);\n}\n.content {\n    margin-top: 20px;\n    width: 80%;\n    height: auto;\n    border-radius: 10px;\n    font-family: Arial, Helvetica, sans-serif;\n    background: var(--white);\n}\n.content .box {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n"],sourceRoot:""}]);const c=r},859:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,"\n.content .box .about {\n    display: grid;\n    grid-template-columns: 1fr;\n    row-gap: 20px;\n    align-items: center;\n    justify-content: center;\n    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n    width: 80%;\n    padding: 40px;\n    margin-bottom: 10px;\n    background: rgb(0,0,0,0.05);\n}\n.content .box .about .info{\n    font-size: 18px;\n    opacity: 0.8;\n}\n.content .box .about .abt-head {\n    font-size: 25px;\n    color: green;\n    opacity: 0.7;\n}\n.content .box .about .time-head {\n    font-size: 25px;\n    color: green;\n    opacity: 0.7;\n}\n.content .box .about .location-head {\n    font-size: 25px;\n    color: green;\n    opacity: 0.7;\n}\n","",{version:3,sources:["webpack://./src/styling-folder/about.css"],names:[],mappings:";AACA;IACI,aAAa;IACb,0BAA0B;IAC1B,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,sEAAsE;IACtE,UAAU;IACV,aAAa;IACb,mBAAmB;IACnB,2BAA2B;AAC/B;AACA;IACI,eAAe;IACf,YAAY;AAChB;AACA;IACI,eAAe;IACf,YAAY;IACZ,YAAY;AAChB;AACA;IACI,eAAe;IACf,YAAY;IACZ,YAAY;AAChB;AACA;IACI,eAAe;IACf,YAAY;IACZ,YAAY;AAChB",sourcesContent:["\n.content .box .about {\n    display: grid;\n    grid-template-columns: 1fr;\n    row-gap: 20px;\n    align-items: center;\n    justify-content: center;\n    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n    width: 80%;\n    padding: 40px;\n    margin-bottom: 10px;\n    background: rgb(0,0,0,0.05);\n}\n.content .box .about .info{\n    font-size: 18px;\n    opacity: 0.8;\n}\n.content .box .about .abt-head {\n    font-size: 25px;\n    color: green;\n    opacity: 0.7;\n}\n.content .box .about .time-head {\n    font-size: 25px;\n    color: green;\n    opacity: 0.7;\n}\n.content .box .about .location-head {\n    font-size: 25px;\n    color: green;\n    opacity: 0.7;\n}\n"],sourceRoot:""}]);const c=r},306:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,"\n\n.content .box .contact-us {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: center;\n    justify-content: center;\n    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n    width: 80%;\n    padding: 40px;\n    margin-bottom: 10px;\n    background: rgb(0,0,0,0.05);\n}\n.content .box .contact-us .details {\n    font-size: 22px;\n    opacity: 0.8;\n    text-align: center;\n}\n.content .box .contact-us img {\n    width: 400px;\n    height: 200px;\n    padding: 25px;\n    border-radius: 30px;\n    border: 2px solid blacks;\n}\n@media only screen and (max-width: 700px) {\n    .content .box .contact-us {\n        display: grid;\n        grid-template-columns: 1fr;\n\n    }\n    .content .box .contact-us img {\n        padding: 10px;\n        max-width: 300px;\n    }\n}","",{version:3,sources:["webpack://./src/styling-folder/contact.css"],names:[],mappings:";;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,uBAAuB;IACvB,sEAAsE;IACtE,UAAU;IACV,aAAa;IACb,mBAAmB;IACnB,2BAA2B;AAC/B;AACA;IACI,eAAe;IACf,YAAY;IACZ,kBAAkB;AACtB;AACA;IACI,YAAY;IACZ,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,wBAAwB;AAC5B;AACA;IACI;QACI,aAAa;QACb,0BAA0B;;IAE9B;IACA;QACI,aAAa;QACb,gBAAgB;IACpB;AACJ",sourcesContent:["\n\n.content .box .contact-us {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: center;\n    justify-content: center;\n    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n    width: 80%;\n    padding: 40px;\n    margin-bottom: 10px;\n    background: rgb(0,0,0,0.05);\n}\n.content .box .contact-us .details {\n    font-size: 22px;\n    opacity: 0.8;\n    text-align: center;\n}\n.content .box .contact-us img {\n    width: 400px;\n    height: 200px;\n    padding: 25px;\n    border-radius: 30px;\n    border: 2px solid blacks;\n}\n@media only screen and (max-width: 700px) {\n    .content .box .contact-us {\n        display: grid;\n        grid-template-columns: 1fr;\n\n    }\n    .content .box .contact-us img {\n        padding: 10px;\n        max-width: 300px;\n    }\n}"],sourceRoot:""}]);const c=r},762:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,":root {\n    --white: white;\n    --yellow: #FFC60B;\n    --green: #85AE85;\n    --light-blue: #0A95FF;\n    --dark-blue: #230AFF;\n    --purple: #7766FF;\n    --lilac: #AAA0FF;\n    --dark-orange: #df880a;\n    --chocolate: #c16a08;\n    --khaki: #ffde73;\n}\n.content .box {\n}\n.content .box .header {\n    padding: 35px;\n    margin: 20px;\n    border: 2px solid var(--green);\n    border-radius: 5px;\n    font-size: 30px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    opacity: 0.8;\n    color: rgb(16, 122, 16);\n}\n.content .box .food {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: center;\n    justify-content: center;\n    width: 80%;\n    padding: 40px;\n    margin-bottom: 10px;\n    background: rgb(0,0,0,0.05);\n}\n.content .box .food .meal-txt {\n    padding: 10px;\n    margin-bottom: 10px;\n}\n.content .box .food img {\n    width: 300px;\n    height: 200px;\n    padding: 25px;\n    border-radius: 30px;\n    border: 2px solid blacks;\n}\n.content .box .food .meal-txt:first-child{\n    text-align: center;\n    color: rgb(236, 140, 156);\n    font-size: 40px;\n}\n.content .box .food .meal-txt:nth-child(2){\n    opacity: 0.7;\n    font-size: 25px;\n}\n.content .box .food .meal-txt:nth-child(3){\n    opacity: 0.9;\n    font-size: 25px;\n}\n@media only screen and (max-width: 700px) {\n    .content .box .food {\n        display: grid;\n        grid-template-columns: 1fr;\n\n    }\n    .content .box .food img {\n        padding: 10px;\n        max-width: 300px;\n    }\n}","",{version:3,sources:["webpack://./src/styling-folder/home.css"],names:[],mappings:"AAAA;IACI,cAAc;IACd,iBAAiB;IACjB,gBAAgB;IAChB,qBAAqB;IACrB,oBAAoB;IACpB,iBAAiB;IACjB,gBAAgB;IAChB,sBAAsB;IACtB,oBAAoB;IACpB,gBAAgB;AACpB;AACA;AACA;AACA;IACI,aAAa;IACb,YAAY;IACZ,8BAA8B;IAC9B,kBAAkB;IAClB,eAAe;IACf,qGAAqG;IACrG,YAAY;IACZ,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,uBAAuB;IACvB,UAAU;IACV,aAAa;IACb,mBAAmB;IACnB,2BAA2B;AAC/B;AACA;IACI,aAAa;IACb,mBAAmB;AACvB;AACA;IACI,YAAY;IACZ,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,wBAAwB;AAC5B;AACA;IACI,kBAAkB;IAClB,yBAAyB;IACzB,eAAe;AACnB;AACA;IACI,YAAY;IACZ,eAAe;AACnB;AACA;IACI,YAAY;IACZ,eAAe;AACnB;AACA;IACI;QACI,aAAa;QACb,0BAA0B;;IAE9B;IACA;QACI,aAAa;QACb,gBAAgB;IACpB;AACJ",sourcesContent:[":root {\n    --white: white;\n    --yellow: #FFC60B;\n    --green: #85AE85;\n    --light-blue: #0A95FF;\n    --dark-blue: #230AFF;\n    --purple: #7766FF;\n    --lilac: #AAA0FF;\n    --dark-orange: #df880a;\n    --chocolate: #c16a08;\n    --khaki: #ffde73;\n}\n.content .box {\n}\n.content .box .header {\n    padding: 35px;\n    margin: 20px;\n    border: 2px solid var(--green);\n    border-radius: 5px;\n    font-size: 30px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    opacity: 0.8;\n    color: rgb(16, 122, 16);\n}\n.content .box .food {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: center;\n    justify-content: center;\n    width: 80%;\n    padding: 40px;\n    margin-bottom: 10px;\n    background: rgb(0,0,0,0.05);\n}\n.content .box .food .meal-txt {\n    padding: 10px;\n    margin-bottom: 10px;\n}\n.content .box .food img {\n    width: 300px;\n    height: 200px;\n    padding: 25px;\n    border-radius: 30px;\n    border: 2px solid blacks;\n}\n.content .box .food .meal-txt:first-child{\n    text-align: center;\n    color: rgb(236, 140, 156);\n    font-size: 40px;\n}\n.content .box .food .meal-txt:nth-child(2){\n    opacity: 0.7;\n    font-size: 25px;\n}\n.content .box .food .meal-txt:nth-child(3){\n    opacity: 0.9;\n    font-size: 25px;\n}\n@media only screen and (max-width: 700px) {\n    .content .box .food {\n        display: grid;\n        grid-template-columns: 1fr;\n\n    }\n    .content .box .food img {\n        padding: 10px;\n        max-width: 300px;\n    }\n}"],sourceRoot:""}]);const c=r},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(r[A]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&r[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},r=[],c=0;c<n.length;c++){var A=n[c],s=o.base?A[0]+o.base:A[0],d=i[s]||0,l="".concat(s," ").concat(d);i[s]=d+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:m,references:1})}r.push(l)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var c=t(i[r]);e[c].references--}for(var A=o(n,a),s=0;s<i.length;s++){var d=t(i[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),i=t(569),r=t.n(i),c=t(565),A=t.n(c),s=t(216),d=t.n(s),l=t(589),p=t.n(l),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=r().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var f=t(762),g={};g.styleTagTransform=p(),g.setAttributes=A(),g.insert=r().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=d(),e()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;const C=[{name:"Black Berry Recipe",whatIs:"\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. \n        Ab nihil vero dolor cum exercitationem voluptatum.\n        ",price:"73$",pics:t.p+"fa7f1923c00d65d43ecf.jpg"},{name:"Chicken Soup",whatIs:"\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. \n        Ab nihil vero dolor cum exercitationem voluptatum. \n        Lorem ipsum dolor sit amet consectetur adipisicing elit. \n        Ab nihil vero dolor cum exercitationem voluptatum.\n        ",price:"4$",pics:t.p+"955dadde09efe0a76550.jpg"},{name:"Banana Soup",whatIs:"\n        consectetur adipisicing elit. \n        Ab nihil vero dolor cum exercitationem voluptatum.\n        ",price:"2$",pics:t.p+"db772e52f8fe341f687d.jpg"},{name:"Red Gorrila Soup",whatIs:"\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. \n        Ab nihil vero dolor cum exercitationem voluptatum. \n        Lorem ipsum dolor \n        ",price:"100$",pics:t.p+"658ba16a0a3d47e1f029.jpg"},{name:"Facebook Rice",whatIs:"\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. \n        Ab nihil vero dolor cum exercitationem voluptatum.\n        ",price:"87$",pics:t.p+"b51fe6ac5505dac0a5c0.jpg"}];function b(n,e){let t=document.createElement("div");return t.classList.add(e),t.textContent=n,t}function h(n){const e=document.createElement("div");return e.classList.add("food"),e.append(b(C[n].name,"meal-txt"),b(C[n].price,"meal-txt"),b(C[n].whatIs,"meal-txt"),function(n){const e=new Image;e.src=n;let t=document.createElement("div");return t.appendChild(e),t}(C[n].pics)),e}var B=t(859),x={};x.styleTagTransform=p(),x.setAttributes=A(),x.insert=r().bind(null,"head"),x.domAPI=a(),x.insertStyleElement=d(),e()(B.Z,x),B.Z&&B.Z.locals&&B.Z.locals;const I=[{about:"The Magical Restaurant only speak this language: \n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. \n        Explicabo reprehenderit harum fugiat ducimus cum eum ex similique \n        rerum maiores culpa? Thank you for giving us a try. \n        ",timeOpen:["Sunday: 8am - 8pm","Monday: 6am - 6pm","Tuesday: 6am - 6pm","Wednesday: 6am - 6pm","Thursday: 6am - 10pm","Friday: 6am - 10pm","Saturday: 8am - 10pm"],location:"555 resturant close, festival of delicious, High dose"}];function y(n,e){const t=document.createElement("div");return t.classList.add(e,"info"),t.textContent=n,t}var v=t(306),w={};w.styleTagTransform=p(),w.setAttributes=A(),w.insert=r().bind(null,"head"),w.domAPI=a(),w.insertStyleElement=d(),e()(v.Z,w),v.Z&&v.Z.locals&&v.Z.locals;const k=[{name:"Super Chief Executiver",title:"CEO",phoneNo:"960-320-600-12",email:"boss@ceo.com",pics:t.p+"7163da5a15c4ad72f109.jpg"},{name:"Pablotical",title:"Dish Washer",phoneNo:"390-152-674-65",email:"dish-washer@gmail.com",pics:t.p+"fada457ffd0f0ba3d774.jpg"},{name:"Fenandexical",title:"Chef",phoneNo:"000-534-323-23",email:"chef@gmail.com",pics:t.p+"60e3c6638f8c9007ce77.jpg"}];function F(n,e){const t=document.createElement("div");return t.classList.add(e),t.textContent=n,t}const E=n=>{const e=document.createElement("div");e.classList.add("contact-us");const t=document.createElement("div");return t.classList.add("details"),t.append(F(k[n].name),F(k[n].title),F(k[n].phoneNo),F(k[n].email)),e.append(t,function(n){const e=document.createElement("div"),t=new Image;return t.src=n,e.appendChild(t),e}(k[n].pics)),e},L=[{name:"Home",func:function(){const n=document.createElement("div");n.classList.add("box");const e=document.createElement("div");e.classList.add("header"),n.appendChild(e),e.textContent="The Magical Restaurant";for(let e=0;e<C.length;e++)n.appendChild(h(e));return n}()},{name:"About",func:function(){const n=document.createElement("div"),e=document.createElement("div");return n.classList.add("box"),e.classList.add("header"),e.textContent="About Us",n.appendChild(e),n.appendChild(function(n){const e=document.createElement("div");e.classList.add("about"),I.map(((n,t)=>{e.append(y("About","abt-head"),y(n.about,"abt"),y("Location","location-head"),y(n.location,"location"))})),e.appendChild(y("Open By:","time-head")),document.querySelector(".time");for(let n=0;n<I[0].timeOpen.length;n++)e.appendChild(y(I[0].timeOpen[n],"time"));return e}()),n}()},{name:"Contact",func:function(){const n=document.createElement("div");n.classList.add("box");const e=document.createElement("div");e.classList.add("header"),e.textContent="Contact Us",n.appendChild(e);for(let e=0;e<k.length;e++)n.appendChild(E(e));return n}()}],T=new class{constructor(n){this.pages=n}navFunc(n,e){const t=document.createElement("div");return t.classList.add("topbar"),t.id=e,t.textContent=n,t}contentFunc(){const n=document.querySelectorAll(".topbar"),e=document.querySelector(".content");e.appendChild(this.pages[0].func),n.forEach((n=>{n.addEventListener("click",(()=>{const t=document.querySelector(".box");e.removeChild(t),e.appendChild(this.pages[n.id].func)}))}))}doFunc(){const n=document.createElement("div");n.classList.add("nav");for(let e=0;e<3;e++)n.appendChild(this.navFunc(this.pages[e].name,e));return n}}(L),j=document.querySelector(".content");document.body.insertBefore(T.doFunc(),j),T.contentFunc()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,